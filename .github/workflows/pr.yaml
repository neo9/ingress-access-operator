name: PR on main branch

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3.5.1
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Compile
      run: ./gradlew build -x test
    - name: Run tests
      run: ./gradlew test
    - name: Build container image
      run: NATIVE_IMAGE=false ./gradlew bootBuildImage
    - name: Upload test image
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: "docker.io/neo9sas/ingress-access-operator:latest"

  integration-tests:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [v1.21.14+k3s1, v1.22.16+k3s1, v1.23.15-rc1+k3s1]
    steps:
      - uses: actions/checkout@v3
      - name: Download test image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "docker.io/neo9sas/ingress-access-operator:latest"
      - uses: jupyterhub/action-k3s-helm@v3
        id: k3s
        with:
          k3s-version: ${{ matrix.k8s_version }}
      - name: test on k3s
        run: |
          mkdir /tmp/output
          cp ${KUBECONFIG} /tmp/output
          chmod 777 /tmp/output/config
          kubectl apply -f ./crds/
          kubectl create namespace nginx-istio-ingress
          kubectl apply -f https://raw.githubusercontent.com/istio/istio/1.11.2/manifests/charts/base/crds/crd-all.gen.yaml
          docker run -d --rm \
                  --network host \
                  --name ingress-access-operator-test \
                  -e EXTENSION_UPDATE_ISTIO_INGRESS_SIDECAR_ENABLED=true \
                  -e EXTENSION_EXPOSER_ENABLED=true \
                  -e EXTENSION_DEFAULT_FILTERING_ENABLED=true \
                  -v /tmp/output:/tmp/output:ro \
                  -e KUBECONFIG=/tmp/output/config \
                  docker.io/neo9sas/ingress-access-operator:latest
          sleep 30
          docker ps
          docker logs ingress-access-operator-test
          curl 'http://127.0.0.1:8081/actuator/info'
          echo
          testsFailed=0
          cd scripts
          ./run-integration-test.sh || testsFailed=1
          cd -
          docker logs ingress-access-operator-test
          docker stop ingress-access-operator-test
          exit ${testsFailed}

  native-build:
    needs: [integration-tests] # not really needed, but is a way to not duplicate build errors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3.5.1
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Compile
        run: ./gradlew build -x test
      - name: Run tests
        run: ./gradlew test
      - name: Build container image
        run: NATIVE_IMAGE=true ./gradlew bootBuildImage
      - name: Upload test image
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "docker.io/neo9sas/ingress-access-operator:latest"

  native-integration-tests:
    needs: [native-build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s_version: [v1.21.14+k3s1, v1.22.16+k3s1, v1.23.15-rc1+k3s1]
    steps:
      - uses: actions/checkout@v3
      - name: Download test image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "docker.io/neo9sas/ingress-access-operator:latest"
      - uses: jupyterhub/action-k3s-helm@v3
        id: k3s
        with:
          k3s-version: ${{ matrix.k8s_version }}
      - name: test on k3s
        run: |
          mkdir /tmp/output
          cp ${KUBECONFIG} /tmp/output
          chmod 777 /tmp/output/config
          kubectl apply -f ./crds/
          kubectl create namespace nginx-istio-ingress
          kubectl apply -f https://raw.githubusercontent.com/istio/istio/1.11.2/manifests/charts/base/crds/crd-all.gen.yaml
          docker run -d --rm \
                  --network host \
                  --name ingress-access-operator-test \
                  -e EXTENSION_UPDATE_ISTIO_INGRESS_SIDECAR_ENABLED=true \
                  -e EXTENSION_EXPOSER_ENABLED=true \
                  -e EXTENSION_DEFAULT_FILTERING_ENABLED=true \
                  -v /tmp/output:/tmp/output:ro \
                  -e KUBECONFIG=/tmp/output/config \
                  docker.io/neo9sas/ingress-access-operator:latest
          sleep 5
          docker ps
          docker logs ingress-access-operator-test
          curl 'http://127.0.0.1:8081/actuator/info'
          echo
          testsFailed=0
          cd scripts
          ./run-integration-test.sh || testsFailed=1
          cd -
          docker logs ingress-access-operator-test
          docker stop ingress-access-operator-test
          exit ${testsFailed}

  security-scan:
    needs: [native-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download test image
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "docker.io/neo9sas/ingress-access-operator:latest"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/neo9sas/ingress-access-operator:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
